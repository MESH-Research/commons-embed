<?php
/**
 * Adds a REST endpoint that makes requests to the Fedora API and returns the result.
 *
 * @package MESHResearch\CommonsEmbed
 * @subpackage CoreConnect
 * @author Mike Thicke
 *
 * @since 0.2.0
 * @since 0.3.0 Added /fields endpoint, refactored to use Hcommons_Repository.
 */

namespace MESHResearch\CommonsConnect\CoreConnect;

/**
 * Actions
 */
add_action( 'rest_api_init', __NAMESPACE__ . '\register_rest' );

/**
 * Registers REST routes.
 *
 * Routes:
 *  - /find - From search terms generated by POST request, query remote host,
 *    parse results, and return as JSON object.
 */
function register_rest() {
	register_rest_route(
		'commons-connect/v1',
		'/find',
		[
			[
				'methods'             => 'POST',
				'permission_callback' => __NAMESPACE__ . '\rest_public_permissions_check',
				'callback'            => __NAMESPACE__ . '\rest_find_callback',
			],
		]
	);

	register_rest_route(
		'commons-connect/v1',
		'/item',
		[
			[
				'methods'             => 'POST',
				'permission_callback' => __NAMESPACE__ . '\rest_public_permissions_check',
				'callback'            => __NAMESPACE__ . '\rest_item_callback',
			],
		]
	);

	register_rest_route(
		'commons-connect/v1',
		'/fields',
		[
			[
				'methods'             => 'GET',
				'permission_callback' => __NAMESPACE__ . '\rest_public_permissions_check',
				'callback'            => __NAMESPACE__ . '\rest_fields_callback',
			],
		]
	);
}

/**
 * Returns whether user has permission to make the REST request.
 *
 * We are making a call to a public API and not exposing or altering any site
 * data based on the request. This request can be initiated by any visitor to
 * the site, so must always return true.
 *
 * @return boolean True if user has permission to make the request.
 */
function rest_public_permissions_check() {
	return true;
}

/**
 * Callback for /find endpoint.
 *
 * @param \WP_REST_Request $request The REST request object.
 *
 * @return \WP_REST_Response JSON encoded data from query to remote Fedora repository.
 */
function rest_find_callback( $request ) {
	$repository = new Hcommons_Repository();
	$response   = $repository->find_objects( $request->get_param( 'searchParameters' ) );

	if ( is_null( $response ) ) {
		$response = new \WP_Error( 'repository-error', 'Failed to search the repository.' );
	}

	return rest_ensure_response( $response );
}

/**
 * Callback for /item endpoint.
 *
 * @param \WP_REST_Request $request The REST request object.
 *
 * @return \WP_REST_Response JSON encoded data from query to remote Fedora repository.
 */
function rest_item_callback( $request ) {
	$repository = new Hcommons_Repository();
	$response   = $repository->get_object_data( $request->get_param( 'pid' ) );

	if ( is_null( $response ) ) {
		return new \WP_Error( 'repository-error', 'Failed to search the repository.' );
	}

	return rest_ensure_response( $response );
}

/**
 * Callback for /fields endpoint.
 *
 * @return \WP_REST_Response JSON encoded data from query to remote Fedora repository.
 */
function rest_fields_callback() {
	$repository = new Hcommons_Repository();
	$fields     = $repository->get_field_list();
	return rest_ensure_response( $fields );
}
